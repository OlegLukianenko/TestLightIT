// Generated by Dagger (https://google.github.io/dagger).
package lightIT.test.application.viewmodel;

import dagger.internal.Factory;
import javax.inject.Provider;
import lightIT.test.application.data.repository.RepositoryApi;

public final class FirstFragmentViewModel_Factory implements Factory<FirstFragmentViewModel> {
  private final Provider<RepositoryApi> repositoryApiProvider;

  public FirstFragmentViewModel_Factory(Provider<RepositoryApi> repositoryApiProvider) {
    this.repositoryApiProvider = repositoryApiProvider;
  }

  @Override
  public FirstFragmentViewModel get() {
    return provideInstance(repositoryApiProvider);
  }

  public static FirstFragmentViewModel provideInstance(
      Provider<RepositoryApi> repositoryApiProvider) {
    FirstFragmentViewModel instance = new FirstFragmentViewModel();
    FirstFragmentViewModel_MembersInjector.injectRepositoryApi(
        instance, repositoryApiProvider.get());
    return instance;
  }

  public static FirstFragmentViewModel_Factory create(
      Provider<RepositoryApi> repositoryApiProvider) {
    return new FirstFragmentViewModel_Factory(repositoryApiProvider);
  }

  public static FirstFragmentViewModel newFirstFragmentViewModel() {
    return new FirstFragmentViewModel();
  }
}
