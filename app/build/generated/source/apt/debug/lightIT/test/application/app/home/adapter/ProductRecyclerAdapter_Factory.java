// Generated by Dagger (https://google.github.io/dagger).
package lightIT.test.application.app.home.adapter;

import dagger.internal.Factory;
import javax.inject.Provider;

public final class ProductRecyclerAdapter_Factory implements Factory<ProductRecyclerAdapter> {
  private final Provider<ProductRecyclerAdapter.ProductItemListListener> listenerProvider;

  public ProductRecyclerAdapter_Factory(
      Provider<ProductRecyclerAdapter.ProductItemListListener> listenerProvider) {
    this.listenerProvider = listenerProvider;
  }

  @Override
  public ProductRecyclerAdapter get() {
    return provideInstance(listenerProvider);
  }

  public static ProductRecyclerAdapter provideInstance(
      Provider<ProductRecyclerAdapter.ProductItemListListener> listenerProvider) {
    return new ProductRecyclerAdapter(listenerProvider.get());
  }

  public static ProductRecyclerAdapter_Factory create(
      Provider<ProductRecyclerAdapter.ProductItemListListener> listenerProvider) {
    return new ProductRecyclerAdapter_Factory(listenerProvider);
  }

  public static ProductRecyclerAdapter newProductRecyclerAdapter(
      ProductRecyclerAdapter.ProductItemListListener listener) {
    return new ProductRecyclerAdapter(listener);
  }
}
